name: Claude Code SDK Automation

on:
  workflow_dispatch:  # 手動実行
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/claude-code.yml'

jobs:
  claude-sdk-execution:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Claude Code CLI のインストール
      - name: Install Claude Code CLI
        run: |
          echo "Installing Claude Code CLI..."
          npm install -g @anthropic-ai/claude-code
          echo "Claude CLI installed successfully"

      # Claude Code SDK のインストール
      - name: Install Claude Code SDK
        run: |
          echo "Installing Claude Code SDK for TypeScript..."
          npm install @instantlyeasy/claude-code-sdk-ts
          echo "Claude SDK installed successfully"

      # 必要な依存関係のインストール
      - name: Install TypeScript and dependencies
        run: |
          npm install -g typescript ts-node
          npm install @types/node
          echo "Dependencies installed successfully"

      # Claude 認証設定（MAXプラン課金内のみ使用）
      - name: Configure Claude Authentication
        env:
          CLAUDE_ACCESS_TOKEN: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          CLAUDE_REFRESH_TOKEN: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
        run: |
          echo "Configuring Claude authentication (MAX plan only)..."
          
          # 認証設定（MAXプランのアクセストークン・リフレッシュトークンのみ使用）
          if [ -n "$CLAUDE_ACCESS_TOKEN" ]; then
            echo "✅ Claude access token is available"
            # 認証設定をファイルに保存
            mkdir -p ~/.claude
            echo "access_token: $CLAUDE_ACCESS_TOKEN" > ~/.claude/config.yml
            echo "refresh_token: $CLAUDE_REFRESH_TOKEN" >> ~/.claude/config.yml
          else
            echo "❌ Claude access token not found in secrets"
            exit 1
          fi
          
          echo "Authentication configuration completed (using MAX plan credentials only)"

      # Claude SDK実行スクリプトの作成と実行（MAXプラン課金内）
      - name: Create and run Claude SDK script
        env:
          CLAUDE_ACCESS_TOKEN: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          CLAUDE_REFRESH_TOKEN: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
        run: |
          echo "Creating Claude SDK script..."
          
          cat > claude-sdk-execution.ts << 'EOF'
          import { claude } from '@instantlyeasy/claude-code-sdk-ts';

          async function executeClaudeSDK() {
            try {
              console.log('🚀 Starting Claude SDK execution...');
              
              // 基本的なクエリ実行
              const response = await claude()
                .query('Hello! Please respond with "Claude SDK is working!" and nothing else.')
                .asText();
              
              console.log('📝 Claude response:', response);
              
              if (response.includes('Claude SDK is working!')) {
                console.log('✅ Claude SDK execution successful!');
                process.exit(0);
              } else {
                console.log('❌ Claude SDK execution failed - unexpected response');
                process.exit(1);
              }
            } catch (error) {
              console.error('❌ Claude SDK execution failed with error:', error);
              process.exit(1);
            }
          }

          executeClaudeSDK();
          EOF
          
          echo "Running Claude SDK execution..."
          npx ts-node claude-sdk-execution.ts

      # 結果の確認とレポート
      - name: Verify SDK functionality
        run: |
          echo "Verifying Claude SDK installation and functionality..."
          
          # インストール確認
          node -e "console.log('Claude SDK version:', require('@instantlyeasy/claude-code-sdk-ts/package.json').version)"
          
          # 設定確認
          if [ -f ~/.claude/config.yml ]; then
            echo "✅ Claude config file exists"
          else
            echo "❌ Claude config file not found"
          fi
          
          echo "Verification completed"

      # レポート生成
      - name: Generate execution report
        if: always()
        run: |
          echo "## Claude Code SDK Execution Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Execution Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Node.js 18 setup completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Claude Code CLI installed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Claude Code SDK installed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Authentication configured" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Claude SDK execution completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment Details" >> $GITHUB_STEP_SUMMARY
          echo "- OS: Ubuntu Latest" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: 18.x" >> $GITHUB_STEP_SUMMARY
          echo "- SDK: @instantlyeasy/claude-code-sdk-ts" >> $GITHUB_STEP_SUMMARY
          echo "- CLI: @anthropic-ai/claude-code" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 Claude Code SDK automation completed successfully!"